plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'

    //firebase 쓰려고 추가함
    id 'com.google.gms.google-services'
    //google maps 쓰려고 추가함
    id 'com.google.android.libraries.mapsplatform.secrets-gradle-plugin'
    // kapt 쓰려고 추가함
    id("kotlin-kapt")
}

// For local.properties
Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())

android {
    namespace 'com.example.runrun'
    compileSdk 34

    buildFeatures {
        buildConfig = true
    }
    
    viewBinding {
        enabled = true
    }

    defaultConfig {
        //service key 지정
        buildConfigField "String", "SERVICE_KEY", properties['serviceKey']
        buildConfigField "String", "GOOGLE_API", properties['google_api']
        buildConfigField "String", "DECODING_SERVICE_KEY", properties['decoding_serviceKey']

        applicationId "com.example.runrun"
        minSdk 24
        targetSdk 34
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    viewBinding{
        enable = true
    }
}

dependencies {

    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'com.google.android.material:material:1.4.0'
    implementation 'com.google.android.gms:play-services-places:17.0.0'
    implementation 'com.google.android.gms:play-services-fitness:21.1.0'
    implementation 'com.google.android.libraries.places:places:3.2.0'
    implementation 'androidx.activity:activity:1.8.0'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.0'
     //코루틴 쓰려고 추가함
    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-android:1.7.0-RC")

    // Import the Firebase BoM
    implementation platform('com.google.firebase:firebase-bom:32.2.0')
    // TODO: Add the dependencies for Firebase products you want to use
    // When using the BoM, don't specify versions in Firebase dependencies
    implementation 'com.google.firebase:firebase-analytics-ktx'
    //firestore 등록
    implementation 'com.google.firebase:firebase-firestore-ktx:24.10.2'

    // to use Google Map
    implementation 'com.google.android.gms:play-services-maps:18.1.0'

    // viewpager2
    implementation("androidx.viewpager2:viewpager2:1.0.0")

    // fragment
    implementation 'androidx.fragment:fragment-ktx:1.2.5'

    // tikxml
    implementation("com.tickaroo.tikxml:annotation:0.8.13")
    implementation("com.tickaroo.tikxml:core:0.8.13")
    implementation("com.tickaroo.tikxml:retrofit-converter:0.8.13")
    implementation("androidx.legacy:legacy-support-v4:1.0.0")
    kapt("com.tickaroo.tikxml:processor:0.8.13")
    // glide
    implementation("com.github.bumptech.glide:glide:4.12.0")

    // preference 하려고
    implementation("androidx.preference:preference:1.2.1")

    // auth 로그인 구현 중
    implementation("com.google.firebase:firebase-auth-ktx")
    implementation("androidx.multidex:multidex:2.0.1")
    // google 로그인
    implementation("com.google.android.gms:play-services-auth:21.1.1")
    // storage 추가
    implementation("com.google.firebase:firebase-storage-ktx")
    // youtube search 구현 하려고..
    implementation ("com.squareup.retrofit2:retrofit:2.9.0")
    implementation ("com.squareup.retrofit2:converter-gson:2.9.0")
    // interceptor 추가
    implementation ("com.squareup.okhttp3:logging-interceptor:4.9.0")
    // youtube 비디오를 실행하려면..
    implementation ('com.pierfrancescosoffritti.androidyoutubeplayer:core:11.0.1')

}

configurations.all {
    resolutionStrategy.eachDependency { DependencyResolveDetails details ->
        def requested = details.requested
        if (requested.group == "androidx.appcompat") {
            if (!requested.name.startsWith("multidex")) {
                details.useVersion "1.+"
            }
        }
    }
}
